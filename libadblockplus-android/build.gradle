apply plugin: 'com.android.library'

android {
  compileSdkVersion 16
  buildToolsVersion "25.0.0"

  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 16
    versionCode 3
    versionName "2.1"
  }

  publishNonDefault true

  productFlavors {
    abi_arm {
      ndk {
        abiFilters "armeabi-v7a"
      }

      externalNativeBuild {
        ndkBuild {
          arguments "APP_ABI=armeabi-v7a"
        }
      }
    }

    abi_x86 {
      ndk {
        abiFilters "x86"
      }

      externalNativeBuild {
        ndkBuild {
          arguments "APP_ABI=x86"
        }
      }
    }

    abi_all {
      ndk {
        abiFilters 'armeabi-v7a', 'x86'
      }
    }
  }

  externalNativeBuild {
    ndkBuild {
      path 'jni/Android.mk'
    }
  }

  sourceSets {
    main {
      manifest.srcFile 'AndroidManifest.xml'
      java.srcDirs = ['src']
      res.srcDirs = ['res']
      jni.srcDirs = ['jni']
    }
  }

  def sharedV8LibFiles = System.getenv('SHARED_V8_LIB_FILENAMES')
  if (sharedV8LibFiles != null) {
    def sharedV8LibFilesSet = []
    def sharedV8LibFilesArray = sharedV8LibFiles.split(' ')
    sharedV8LibFilesArray.each { eachFileName ->
      sharedV8LibFilesSet.add("**/" + eachFileName)
      println "[Configuration] Excluding shared v8 library " + eachFileName + " from AAR"
    }

    packagingOptions {
      excludes = sharedV8LibFilesSet
    }
  } else {
    println "[Configuration] No shared v8 libraries excluded from AAR"
  }

}